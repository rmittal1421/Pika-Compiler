func isEven<int i> -> bool {
	if((i/2)*2 == i) {
		return _true_.
	} else {
		return _false_.
	}
}

func parityString <int a> -> string {
	var numbers := [1,3,5,8,11,12].
	if((numbers map isEven)[3]) { return "even". }
	else { return "odd". }
}

exec {
	var numbers := [1,3,5,8,11,12].
	
	#var parities := numbers map parityString.
	#print parities.
	
	var isOdd := <int x> -> bool {
		return x != (x/2)*2.
	}.
	
	var oddities := numbers reduce isOdd.
	print oddities, _n_.
	print length oddities, _n_.
	
	#var n1 := [1,5,3,9,2].
	#var n2 := [2.1, -3.3, 4.2, 5.0, 17.79].
	#var ratIt := <int n, float f>->rat { return n//[f|int]. }.
	#var numList := zip n1, n2, ratIt.
	#print numList.
	
	#var a1 := [1,2,3].
	#var a2 := [^a^,^b^,^c^].
	#var lambda := <int a, char b>->int { return a + b. }.
	#var lambda2 := <int a, int b>->int { return a + b. }.
	#var a3 := zip a1, zip a1, a2, lambda, lambda2.
	#print a3.
	
	#var st := [[1,2], [3,4]].
	#var reversed := reverse st.
	#print st[0] == reversed[1], _n_.
}